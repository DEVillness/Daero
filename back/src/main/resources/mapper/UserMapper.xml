<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.daero.user.mapper.UserMapper">
    <insert id="insertUser" parameterType="string">
        insert into `users` (`user_email`)
            value (#{userEmail})
    </insert>

    <insert id="insertPasswordResetKey" parameterType="com.ssafy.daero.user.dto.PasswordResetDto">
        insert into `password_reset_keys` (`user_seq`, `reset_key`)
        values (#{userSeq}, #{resetKey})
    </insert>

    <insert id="insertEmailVerificationKey" parameterType="com.ssafy.daero.user.dto.EmailVerificationDto">
        insert into `email_verification_keys` (`user_seq`, `verification_key`)
        values (#{userSeq}, #{verificationKey})
    </insert>

    <select id="selectEmailVerified" parameterType="_int" resultType="com.ssafy.daero.user.dto.UserDto">
        select `users_seq`          as `userSeq`,
               `user_email`         as `userEmail`,
               `password`           as `password`,
               `nickname`           as `nickname`,
               `email_verified_yn`  as `emailVerifiedYn`,
               `suspended_yn`       as `suspendedYn`,
               `profile_image_link` as `profileImageLink`,
               `reported_count`     as `reportedCount`,
               `created_at`         as `createdAt`,
               `del_yn`             as `delYn`,
               `fcm_token`          as `fcmToken`,
               `password_reset_yn`  as `passwordResetYn`
        from `users`
        where `users_seq` = #{userSeq}
    </select>

    <select id="selectNicknameCount" parameterType="string" resultType="_int">
        select count(0)
        from `daero`.`users`
        where `nickname` = #{nickname}
    </select>

    <select id="selectUserByUserEmail" parameterType="string" resultType="com.ssafy.daero.user.dto.UserDto">
        select `users_seq`          as `userSeq`,
               `user_email`         as `userEmail`,
               `password`           as `password`,
               `nickname`           as `nickname`,
               `email_verified_yn`  as `emailVerifiedYn`,
               `suspended_yn`       as `suspendedYn`,
               `profile_image_link` as `profileImageLink`,
               `reported_count`     as `reportedCount`,
               `created_at`         as `createdAt`,
               `del_yn`             as `delYn`,
               `fcm_token`          as `fcmToken`,
               `password_reset_yn`  as `passwordResetYn`
        from `daero`.`users`
        where `user_email` like #{userEmail}
    </select>

    <select id="selectUserByUserSeq" resultType="com.ssafy.daero.user.dto.UserDto">
        select `users_seq`          as `userSeq`,
               `user_email`         as `userEmail`,
               `password`           as `password`,
               `nickname`           as `nickname`,
               `email_verified_yn`  as `emailVerifiedYn`,
               `suspended_yn`       as `suspendedYn`,
               `profile_image_link` as `profileImageLink`,
               `reported_count`     as `reportedCount`,
               `created_at`         as `createdAt`,
               `del_yn`             as `delYn`,
               `fcm_token`          as `fcmToken`,
               `password_reset_yn`  as `passwordResetYn`
        from `users`
        where `users_seq` like #{userSeq}
    </select>

    <update id="updateUser" parameterType="com.ssafy.daero.user.vo.SignupVo">
        update users
        set `password`   = #{hashedPassword},
            `nickname`   = #{nickname},
            `created_at` = #{createAt}
        where `user_email` = #{userEmail};
    </update>

    <update id="updateUserPassword" parameterType="com.ssafy.daero.user.vo.ChangePasswordVo">
        update `users`
        set `password` = #{hashedPassword}
        where `users_seq` = #{userSeq}
    </update>
</mapper>